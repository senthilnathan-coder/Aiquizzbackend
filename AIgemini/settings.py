"""
Django settings for AIgemini project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
import os 
TEMPLATE_DIR=os.path.join(BASE_DIR,'templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-0ck0u=y23^j0j*0lhyx8!bftpo%d^oa!e#3r7_p2akfztl0c=k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

import os
from dotenv import load_dotenv

load_dotenv()
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    'app',
    'app2',
    'rest_framework',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",
    "http://localhost:5174",
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

ROOT_URLCONF = 'AIgemini.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AIgemini.wsgi.application'

from mongoengine import connect
from pymongo.errors import ServerSelectionTimeoutError
import pymongo

MONGODB_SETTINGS = {
    'db': 'demo',
    'host': 'localhost',
    'port': 27017,
    # 'username': 'your_user',
    # 'password': 'your_password',
    # 'authentication_source': 'admin',
}

try:

    connect(
        db=MONGODB_SETTINGS['db'],
        host=MONGODB_SETTINGS['host'],
        port=MONGODB_SETTINGS['port'],
        # username=MONGODB_SETTINGS.get('username'),
        # password=MONGODB_SETTINGS.get('password'),
        # authentication_source=MONGODB_SETTINGS.get('authentication_source'),
        serverSelectionTimeoutMS=3000  # Timeout in milliseconds
    )
    

    client = pymongo.MongoClient(
        host=MONGODB_SETTINGS['host'],
        port=MONGODB_SETTINGS['port'],
        serverSelectionTimeoutMS=3000
    )
    client.admin.command('ping')
    print("✅ MongoDB connected successfully!")

except ServerSelectionTimeoutError:
    print("❌ MongoDB connection failed.")


DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': MONGODB_SETTINGS['db'],
        'CLIENT': {
            'host': MONGODB_SETTINGS['host'],
            'port': MONGODB_SETTINGS['port'],
            # 'username': MONGODB_SETTINGS.get('username'),
            # 'password': MONGODB_SETTINGS.get('password'),
            # 'authSource': MONGODB_SETTINGS.get('authentication_source'),
        }
    }
}

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True




